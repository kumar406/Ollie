{"version":3,"sources":["logo.svg","Button.js","App.js","initialize.js","Ollie-logo.png","Components/Sidebar/Sidebar.js","CreateStory.js","Classes/Story.js","Components/Board/BoardBox/BoardBox.js","Components/Comments/Comments.js","Components/Board/Board.js","Components/Settings/Settings.js","Components/StoryDetails/StoryDetailsItem.js","Components/StoryDetails/StoryDetails.js","login.component.js","signup.component.js","Components/Profile/github.js","Components/Profile/Profile.js","Components/Board/DayRangeEntry.js","Components/Board/BoardByDate.js","Components/Board/PrioritySelection.js","Components/Board/BoardByPriority.js","Components/Board/TimeEstimateEntry.js","Components/Board/BoardByTimeEstimate.js","index.js"],"names":["Button","App","className","to","href","target","rel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Sidebar","src","logo","style","width","height","objectFit","iconShape","title","db","getDatabase","CreateStory","useState","storyName","storyDesc","category","priority","timeEstimate","date_created","comments","state","setState","handleChange","e","name","value","history","useHistory","id","type","onChange","onClick","timeElapsed","Date","now","created","dateVal","getFullYear","getMonth","getDate","story","description","estimated_time","updates","update","ref","push","Story","time","assigner","assignee","watch_list","this","BoardStory","props","modalFunc","show","BoardBox","categStories","i","map","Comment","comment","toUTCString","dbRef","MyVerticallyCenteredModal","commentList","undefined","date","dbcomments","newComment","setNewComment","setComments","titleComp","timeComp","priorityComp","descriptionComp","button","initialState","isEdit","Col","md","lg","event","priorityColor","Modal","size","centered","Header","closeButton","Title","Body","color","onSubmit","text","preventDefault","window","location","reload","Footer","confirm","onHide","Board","storiesAsObj","setStories","firstFetch","useEffect","onValue","snapshot","childNames","childDescriptions","childTimes","childCategories","childPriorities","childDates","childCommentLists","childWatchLists","forEach","childSnapshot","childName","val","childDesc","childTime","childCategory","childPriority","childDate","childComments","childWatchList","fetchedStories","length","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","modalState","setModalState","pathname","stories","filter","newestOnTop","rtl","pauseOnFocusLoss","Settings","DeleteAcc","user","getAuth","currentUser","deleteUser","then","alert","catch","error","console","log","onclick","Component","currUserObj","favStories","StoryDetailsItem","starbtn","watchbtn","currentStory","handleWatchingStory","find","element","item","handleFavoritingStory","Object","values","includes","StoryDetails","useLocation","provider","require","Octokit","GithubAuthProvider","Login","email","password","bind","handleChange2","handleSubmit","github","auth","signInWithEmailAndPassword","userCredential","errorCode","code","errorMessage","message","signInWithPopup","result","credentialFromResult","accessToken","credential","credentialFromError","placeholder","for","htmlFor","marginTop","textAlign","marginBottom","Signup","createUserWithEmailAndPassword","config","token","process","poll","owner","repo","request","response","localStorage","oldCommit","localeCompare","data","sha","newCommit","CreateCodeReviewStory","setTimeout","signout","signOut","displayName","photoURL","emailVerified","uid","currUser","repoOwner","repoName","profileImg","Profile","fullNameComp","EmailComp","GitComp","repoNameComp","Container","Row","DayRangeEntry","dayRange","today","BoardByDate","createdAsDate","getTime","prioritySelection","PrioritySelection","BoardByPriority","TimeEstimateEntry","BoardByTimeEstimate","rootElement","document","getElementById","ReactDOM","render","basename","exact","path","component"],"mappings":"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","file":"static/js/main.659734c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function Button(props) {\n    return <button onClick={props.click}>{props.name}</button>\n    //return <button onClick={hello}>{props.name}</button>;\n}\n\nexport default Button;","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Button from \"./Button.js\";\nimport {Link } from \"react-router-dom\";\nimport { getAuth, signOut } from \"firebase/auth\";\n\nfunction signout() {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (user !== null) {\n    signOut(auth).then(() => {\n      alert(\"Signed out successfully.\");\n    }).catch((error) => {\n      alert(error);\n    });\n  } else {\n    alert(\"No account is currently signed in.\");\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <h1> Ollie </h1>\n        </p>\n        <Link to=\"/login\"><button>\n          Login\n          </button>\n          </Link>\n        <Link to=\"/signup\"><button>\n          Sign-up\n          </button>\n          </Link>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { initializeApp } from 'firebase/app';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAnXtdpxXg1eYEyGJ3xLKF0C2VnYqTQLNc\",\n    authDomain: \"ollie-70ff1.firebaseapp.com\",\n    projectId: \"ollie-70ff1\",\n    storageBucket: \"ollie-70ff1.appspot.com\",\n    messagingSenderId: \"133461552512\",\n    appId: \"1:133461552512:web:900329aa159323de632565\",\n    measurementId: \"G-1W7ZXJ43V9\"\n  };\n  \nconst app = initializeApp(firebaseConfig);\n\nexport default app;\n  ","export default __webpack_public_path__ + \"static/media/Ollie-logo.d63b0c45.png\";","import React from 'react';\nimport {Link } from \"react-router-dom\";\nimport './Sidebar.sass'\nimport logo from \"../../Ollie-logo.png\"\n\n// Sidebar component from https://github.com/azouaoui-med/react-pro-sidebar\nimport { ProSidebar, Menu, MenuItem, SubMenu , SidebarHeader, SidebarContent, SidebarFooter} from 'react-pro-sidebar';\n\n//\n\nfunction Sidebar() {\n    return (\n        <ProSidebar>\n            <SidebarHeader>\n                <center> <img src={logo} style={{ width: \"150px\" , height: \"150px\", objectFit: \"cover\" }} /> </center>\n            </SidebarHeader>\n            \n            <SidebarContent>\n                <Menu iconShape=\"square\">\n                    <MenuItem>\n                        Board\n                        <Link to=\"/Board\" />\n                    </MenuItem>\n                    <MenuItem>\n                        Profile\n                        <Link to=\"/Profile\" />\n                    </MenuItem>\n                    <MenuItem>\n                        Settings\n                        <Link to=\"/Settings\" />\n                    </MenuItem>\n                    <SubMenu title=\"Stories by category\">\n                        <MenuItem>\n                            Backlog\n                            <Link to=\"/StoryDetails\" />\n                        </MenuItem>\n                        <MenuItem>\n                            In Progress\n                            <Link to=\"/StoryDetails\" />\n                        </MenuItem>\n                        <MenuItem>\n                            Blocked\n                            <Link to=\"/StoryDetails\" />\n                        </MenuItem>\n                        <MenuItem>\n                            Done\n                            <Link to=\"/StoryDetails\" />\n                        </MenuItem>\n                    </SubMenu>\n                    <SubMenu title=\"FOR DEVELOPMENT\">\n                        <MenuItem>\n                            login\n                            <Link to=\"/login\" />\n                        </MenuItem>\n                        <MenuItem>\n                            signup\n                            <Link to=\"/signup\" />\n                        </MenuItem>\n                        <MenuItem>\n                            create story\n                            <Link to=\"/CreateStory\" />\n                        </MenuItem>\n                        <MenuItem>\n                            Board by date\n                            <Link to=\"/BoardByDate\" />\n                        </MenuItem>\n                        \n                    </SubMenu>\n                </Menu>\n            </SidebarContent>\n\n            <SidebarFooter>\n                <center>\n                    Ollie 2021 &copy;\n                </center>\n            </SidebarFooter>\n\n        \n            \n        </ProSidebar>           \n    \n    );\n}\n\n\n\n\nexport default Sidebar;","import React, { useState } from \"react\";\nimport './CreateStory.css';\nimport { getDatabase, ref, update } from \"firebase/database\";\nimport app from \"./initialize\";\nimport { useHistory } from \"react-router-dom\";\nimport Sidebar from './Components/Sidebar/Sidebar'\n\nconst db = getDatabase(app);\n\nexport function CreateCodeReviewStory() {\n    //const history = useHistory();\n    const timeElapsed = Date.now();\n    const created = new Date(timeElapsed);\n    var dateVal = created.getFullYear() + \"-\" + (created.getMonth() + 1) + \"-\" + created.getDate();\n\n    const story = {\n        name:\"Code Review For Commit \" + localStorage.oldCommit,\n        description:\"Commit \" + localStorage.oldCommit,\n        estimated_time:3,\n        category:\"backlog\",\n        priority:\"medium\",\n        date_created:dateVal,\n        comments: [\"First comment!\"]\n    }\n    const updates = {};\n    updates['/stories/' + story.name] = story;\n    update(ref(db), updates);\n    //history.push(\"/Board\");\n}\n\nfunction CreateStory() {\n    const [state, setState] = useState({\n        storyName: \"\",\n        storyDesc: \"\",\n        category: \"backlog\",\n        priority: \"low\",\n        timeEstimate: 0,\n        date_created: \"\",\n        comments: [\"First comment!\"]\n    })\n\n    const handleChange = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n    const history = useHistory()\n\n    return (\n        <div id=\"CreateStory\">\n            <div id=\"sidebar\">\n                <Sidebar />\n            </div>\n\n            <div id=\"create-story-content\">\n                <h1>Enter your story info on this page.</h1>\n                <form>\n                    <label>\n                        Name of Story:{\" \"} \n                        <input \n                        type=\"text\" \n                        name=\"storyName\"\n                        value={state.storyName} \n                        onChange={handleChange}\n                        />\n                    </label>\n                    <br></br>\n                    <label>\n                        Description of Story:{\" \"} \n                        <input \n                            type=\"text\" \n                            name=\"storyDesc\"\n                            value={state.storyDesc} \n                            onChange={handleChange}\n                        />\n                    </label>\n                    <br></br>\n                    <label>\n                        Category:\n                        <select\n                            name=\"category\"\n                            value={state.category} \n                            onChange={handleChange}\n                        >\n                        <option value=\"backlog\">Backlog</option>\n                        <option value=\"in_progress\">In Progress</option>\n                        <option value=\"blocked\">Blocked</option>\n                        <option value=\"done\">Done</option>\n                        </select>\n                    </label>\n                    <br></br>\n                    <label>\n                        Priority:\n                        <select\n                            name=\"priority\"\n                            value={state.priority} \n                            onChange={handleChange}\n                        >\n                        <option value=\"low\">Low</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"high\">High</option>\n                        </select>\n                    </label>\n                    <br></br>\n                    <label>\n                        Time Estimate:{\" \"} \n                        <input \n                            type=\"number\" \n                            name=\"timeEstimate\"\n                            value={state.timeEstimate} \n                            onChange={handleChange}\n                        />\n                    </label>\n                </form>\n                <button onClick={()=>{\n                    \n                    const timeElapsed = Date.now();\n                    const created = new Date(timeElapsed);\n                    var dateVal = created.getFullYear() + \"-\" + (created.getMonth() + 1) + \"-\" + created.getDate();\n\n                    const story = {\n                        name:state.storyName,\n                        description:state.storyDesc,\n                        estimated_time:state.timeEstimate,\n                        category:state.category,\n                        priority:state.priority,\n                        date_created:dateVal,\n                        comments:state.comments\n                    }\n                    const updates = {};\n                    updates['/stories/' + state.storyName] = story;\n                    update(ref(db), updates);\n                    history.push(\"/Board\")\n                    }}>\n                    Next\n                </button> \n            </div>       \n        </div>\n    );\n}\n\nexport default CreateStory;","export class Story {\n    constructor(title, description, time, assigner, assignee, priority, category, date_created, comments, watch_list) {\n        this.title = title;\n        this.description = description;\n        this.time = time;\n        this.assigner = assigner;\n        this.assignee = assignee;\n        this.priority = priority;\n        this.category = category;\n        this.date_created = date_created;\n        this.comments = comments;\n        this.watch_list = watch_list;\n    }\n}\n\nexport default Story;","import React from 'react';\n\nconst BoardBox = (props) => {\n    var categStories = props.categStories;\n    let i = 0;\n    return (\n        <div>\n            <div className=\"card-body\">\n                {categStories.map((story) => (\n                    <BoardStory key={i++} story={story} modalFunc={props.modalFunc} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nconst BoardStory = (props) => {\n    return (\n        <div>\n            <a className=\"indiv-story-anchor\" onClick={() => props.modalFunc({show: true, story: props.story})}>\n                <div className=\"story-in-board\">\n                    <h6 className=\"story-title\">{props.story.title}</h6>\n                    <h6 className=\"time-estimate\">{props.story.time} hrs</h6>\n                </div>\n            </a>\n        </div>\n    );\n}\n\nexport default BoardBox","import React from \"react\";\nimport './Comments.css'\n\n// props will be the comment object retrieved from the database\n\nconst Comment = (props) => {\n    var comment = props.comment\n    return <div className=\"Comment\">\n      <p>{comment}</p>\n    </div>\n}\n\nexport default Comment;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue, update, push, set } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport Comment from \"../Comments/Comments\";\nimport './Board.css';\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n//Code to find date and time is from freeCodeCamp tutorial\nconst timeElapsed = Date.now();\nconst created = new Date(timeElapsed);\nvar dateVal = created.toUTCString();\n\nconst db = getDatabase();\nconst dbRef = ref(db, 'stories');\n\nfunction Board() {\n\n  //#region Iterate through all of the stories in the database\n\n  const [storiesAsObj, setStories] = useState([]);\n  let firstFetch = true;\n\n  useEffect(() => {\n    onValue(dbRef, (snapshot) => {\n      var childNames = [];\n      var childDescriptions = [];\n      var childTimes = [];\n      var childCategories = [];\n      var childPriorities = [];\n      var childDates = [];\n      var childCommentLists = [];\n      var childWatchLists = [];\n\n      snapshot.forEach((childSnapshot) => {\n        const childName = childSnapshot.val().name;\n        const childDesc = childSnapshot.val().description;\n        const childTime = childSnapshot.val().estimated_time;\n        const childCategory = childSnapshot.val().category;\n        const childPriority = childSnapshot.val().priority;\n        const childDate = childSnapshot.val().date_created;\n        const childComments = childSnapshot.val().comments;\n        let childWatchList = [];\n        if (childSnapshot.val().watch_list !== undefined) {\n          childWatchList = childSnapshot.val().watch_list;\n        }\n        childNames.push(childName);\n        childDescriptions.push(childDesc);\n        childTimes.push(childTime);\n        childCategories.push(childCategory);\n        childPriorities.push(childPriority);\n        childDates.push(childDate);\n        childCommentLists.push(childComments);\n        childWatchLists.push(childWatchList);\n      });\n      const assigner_ = \"Qusai\";\n      const assignee_ = \"Bob\";\n      var fetchedStories = [];\n\n      //Store stories as objects based on \n      for (var i = 0; i < childNames.length; i++) {\n        fetchedStories.push(new Story(childNames[i], childDescriptions[i], childTimes[i], assigner_, assignee_, childPriorities[i], childCategories[i], childDates[i], childCommentLists[i], childWatchLists[i]));\n      }\n\n      setStories(fetchedStories);\n      if (!firstFetch) {\n        {/* Used to view an alert to users whenever a change happens to the stories in the database */ }\n        toast.info('Stories have been updated!', {\n          position: \"bottom-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n      }\n      else {\n        firstFetch = false;\n      }\n    });\n  }, []);\n\n  //#endregion\n\n  const [modalState, setModalState] = useState({\n    show: false,\n    story: null\n  });\n\n  return (\n    <div id=\"Board\">\n      <div id=\"sidebar\">\n        <Sidebar />\n      </div>\n      <div id=\"board-content\">\n        <div className=\"container\">\n          <div className=\"card\">\n            <Link className=\"board-anchors\" to={{\n              pathname: \"/StoryDetails\",\n              state: { category: \"backlog\", stories: storiesAsObj }\n            }}>\n              <h5 className=\"board-box-title\">Backlog</h5>\n            </Link>\n            <BoardBox categStories={storiesAsObj.filter(story => story.category === \"backlog\")} modalFunc={setModalState} />\n          </div>\n          <div className=\"card\">\n\n            <Link className=\"board-anchors\" to={{\n              pathname: \"/StoryDetails\",\n              state: { category: \"in_progress\", stories: storiesAsObj }\n            }}>\n              <h5 className=\"board-box-title\">In Progress</h5>\n            </Link>\n\n            <BoardBox categStories={storiesAsObj.filter(story => story.category === \"in_progress\")} modalFunc={setModalState} />\n          </div>\n          <div className=\"card\">\n\n            <Link className=\"board-anchors\" to={{\n              pathname: \"/StoryDetails\",\n              state: { category: \"blocked\", stories: storiesAsObj }\n            }}>\n              <h5 className=\"board-box-title\">Blocked</h5>\n            </Link>\n\n            <BoardBox categStories={storiesAsObj.filter(story => story.category === \"blocked\")} modalFunc={setModalState} />\n\n          </div>\n          <div className=\"card\">\n\n            <Link className=\"board-anchors\" to={{\n              pathname: \"/StoryDetails\",\n              state: { category: \"done\", stories: storiesAsObj }\n            }}>\n              <h5 className=\"board-box-title\">Done</h5>\n            </Link>\n\n            <BoardBox categStories={storiesAsObj.filter(story => story.category === \"done\")} modalFunc={setModalState} />\n          </div>\n        </div>\n\n\n        <Link to=\"/DayRangeEntry\"><button>\n          Board By Date\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/PrioritySelection\"><button>\n          Board By Priority\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/TimeEstimateEntry\"><button>\n          Board By Time Estimate\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n      </div>\n\n      {modalState.show === true && <MyVerticallyCenteredModal\n        show={modalState.show}\n        onHide={() => setModalState({ show: false, story: modalState.story })}\n        story={modalState.story}\n      />}\n\n      {/* Used to view an alert to users whenever a change happens to the stories in the database */}\n      <ToastContainer\n      position=\"bottom-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      />\n    </div>\n  );\n}\n\n\nfunction MyVerticallyCenteredModal(props) {\n  var commentList = [];\n\n  // If the story doesn't have any comments, ignore. Else, add them to commentList\n  if (props.story.comments != null && props.story.comments != undefined) {\n    commentList = props.story.comments;\n  }\n\n  // state for new comment input box\n  const [newComment, setNewComment] = useState('');\n  // state for comments (helps in auto updating, handling change in input stuff, etc...)\n  const [comments, setComments] = useState(commentList);\n\n\n\n  //Below functions (Change, Submit) are for handling new comments by user\n  const handleCommentChange = (event) => {\n    setNewComment(event.target.value);\n  }\n\n  const handleCommentSubmit = (event) => {\n    setComments([...comments, {text: newComment}])\n    commentList.push(newComment);\n    event.preventDefault();\n    \n    const updates = {};\n    updates['/stories/' + props.story.title + '/comments'] = commentList;\n    update(ref(db), updates);\n    window.location.reload();\n  }\n\n  // to set up initial state of the story values and handling when they change (related to auto update and checking isEdit)\n  var title;\n  var description;\n  var time;\n  var priority;\n  var category;\n  var date;\n  var dbcomments;\n  if (props.story != null) {\n    title = props.story.title\n    description = props.story.description;\n    time = props.story.time;\n    priority = props.story.priority;\n    category = props.story.category;\n    date = props.story.date_created;\n    dbcomments = props.story.comments;\n  }\n\n  const initialState = {\n    isEdit: false,\n    title: title, \n    time: time, \n    priority: priority,\n    description: description\n  }\n  const[state, setState] = useState(initialState)\n\n  //#region \n  const handleEdit = () => {\n      setState({\n        ...state,\n        isEdit: true\n      })\n  }\n\n  const handleSave = (event) => {\n      const story = {\n        name:state.title,\n        description:state.description,\n        estimated_time:state.time,\n        category: category,\n        priority:state.priority,\n        date_created:date,\n        comments:dbcomments\n      }\n\n      const updates = {};\n      updates['/stories/' + props.story.title] = story;\n      update(ref(db), updates);\n      setState({\n        ...state,\n        isEdit: false\n      })\n  }\n\n  const handleChange = e => {\n    setState({\n        ...state,\n        [e.target.name]: e.target.value\n    })\n}\n\n  var titleComp;\n  var timeComp;\n  var priorityComp;\n  var descriptionComp;\n  var button;\n\n  if (state.isEdit) {\n    titleComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChange} value={state.title} name=\"title\"></input></Col>;\n    timeComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChange} value={state.time} name=\"time\"></input></Col>;\n    priorityComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChange} value={state.priority} name=\"priority\"></input></Col>;\n    descriptionComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChange} value={state.description} name=\"description\"></input></Col>;\n    button = <button id=\"edit-btn\" onClick={handleSave}>Save Changes</button>;\n  }\n  else {\n    titleComp = <Col md=\"auto\" lg=\"auto\">{state.title}</Col>;\n    timeComp = <Col md=\"auto\" lg=\"auto\">{state.time}</Col>;\n    priorityComp = <Col md=\"auto\" lg=\"auto\">{state.priority}</Col>;\n    descriptionComp = <Col md=\"auto\" lg=\"auto\">{state.description}</Col>;\n    button = <button id=\"edit-btn\" onClick={handleEdit}>Edit Story</button>;\n  }\n  \n\n  var priorityColor = \"\";\n  if (priority == \"high\") {\n    priorityColor = \"red\";\n  }\n  if (priority == \"medium\") {\n    priorityColor = \"orange\";\n  }\n  if (priority == \"low\") {\n    priorityColor = \"green\";\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Story Details\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          <h4>Story Title: {titleComp}</h4>\n        </p> \n        <p>\n          <b>Time Estimate:</b> {timeComp}\n        </p>\n        <p>\n          <b>Priority of this story:</b> <font color={priorityColor}>{priorityComp}</font>\n        </p>\n        <p>\n          <b>Date Created:</b><br></br>\n          {date}\n        </p>\n        <b>Brief Story Description:</b>\n        <p>\n          {descriptionComp}\n        </p>\n        {button}\n\n        <hr id=\"comments-section-line\"></hr>\n        {/* Add section for adding comments */}\n        <h5>Comments</h5>\n\n        <form onSubmit={handleCommentSubmit}>\n          Enter new comment <input type=\"text\" onChange={handleCommentChange}/>\n          <input type=\"submit\"/>\n        </form>\n\n        {comments.map((comment) => {\n          return <Comment comment={comment} />\n        })}\n\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={() => {\n          if (window.confirm(\"Are you sure you want to delete this story?\")) {\n            const updates = {};\n            updates['/stories/' + props.story.title] = null;\n            update(ref(db), updates);\n          }\n        }}>Delete Story</Button>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n  //#endregion\n}\n\nexport { created };\nexport { dateVal };\nexport default Board;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './settings.css'\nimport { getAuth, deleteUser } from \"firebase/auth\";\nimport app from \"../../initialize\";\nimport { getDatabase, ref, update } from \"firebase/database\";\nimport Sidebar from \"../Sidebar/Sidebar\";\n\nconst db = getDatabase(app);\n\n//card and card-body classNamees taken from bootstrap\n\nclass Settings extends Component {\n\n  DeleteAcc = () => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (window.confirm(\"Are you sure you want to delete this account?\")) {\n      deleteUser(user).then(() => {\n        alert(\"User deleted successfully.\")\n        // User deleted, so sign them out and navigate to log-in page.\n        this.props.history.push(\"/login\");\n      }).catch((error) => {\n        console.log(error);\n      });\n    } else {\n      // remove popup and do nothing\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"Settings\">\n\n        <div id=\"sidebar\">\n          <Sidebar />\n        </div>\n\n        <div id=\"settings-content\">\n          <div className=\"settings-item\">\n            <label>default story category</label>\n            <select id=\"story_category\">\n              <option value=\"backlog\">backlog</option>\n              <option value=\"in progress\">in progress</option>\n              <option value=\"blocked\">blocked</option>\n              <option value=\"done\">done</option>\n            </select>\n          </div>\n          <div className=\"settings-item\">\n            <label>broswer notifications</label>\n            <select id=\"browser_notifications\">\n              <option value=\"enable\">enable</option>\n              <option value=\"disable\">disable</option>\n            </select>\n          </div>\n          <div className=\"settings-item\">\n            <label>email notifications</label>\n            <select id=\"email_notifications\">\n              <option value=\"enable\">enable</option>\n              <option value=\"disable\">disable</option>\n            </select>\n          </div>\n          <button type=\"button\" onClick={this.DeleteAcc} >Delete Account</button>\n          <button type=\"button\" onclick=\"onSave()\">Save</button>\n\n          \n        </div>\n      \n      </div>\n    );\n    }\n}\n\n\n\n\nexport default Settings;","import React, {useState} from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { FaStar, FaRegEye } from \"react-icons/fa\";\nimport { getDatabase, ref, onValue, update, push, set } from \"firebase/database\";\n\n\n\nvar currUserObj = { favStories: [] }; //replace with actual currUserObj which include favStories attribute\n\nconst db = getDatabase();\nconst dbRef = ref(db, 'stories');\n\nexport { currUserObj }; //for testing\n\nfunction StoryDetailsItem(props) {\n    var currentStory = props.story;\n\n\n    const handleWatchingStory = (event) => {\n        event.preventDefault();\n\n        if (currentStory.watch_list.find(element => element === \"ollie.project.307@gmail.com\") !== undefined) {\n            currentStory.watch_list = currentStory.watch_list.filter(item => item !== \"ollie.project.307@gmail.com\"/*user.email*/);\n            event.target.style.color = \"white\";\n            console.log(\"remove: \", currentStory.watch_list);\n            const updates = {};\n            updates['/stories/' + props.story.title + \"/watch_list\"] = null;\n            update(ref(db), updates);\n        }\n        else {\n            currentStory.watch_list.push(\"ollie.project.307@gmail.com\"/*user.email*/);\n            event.target.style.color = \"yellow\";\n            console.log(\"add: \", currentStory.watch_list)\n            const updates = {};\n            updates['/stories/' + props.story.title + \"/watch_list\"] = currentStory.watch_list;\n            update(ref(db), updates);\n        }\n    };\n\n    const handleFavoritingStory = (event) => {\n        event.preventDefault();\n        if (event.target.style.color === \"yellow\") {\n            currUserObj.favStories = Object.values(currUserObj.favStories).filter(item => item !== props.story);\n            event.target.style.color = \"white\";\n            console.log(\"remove: \", currUserObj.favStories)\n        }\n        else {\n            currUserObj.favStories.push(props.story);\n            event.target.style.color = \"yellow\";\n            console.log(\"add: \", currUserObj.favStories)\n        }\n    };\n\n    var starbtn;\n    var watchbtn;\n\n    //handle when stories are already favorited/watched\n    if (currUserObj.favStories.includes(props.story)) {\n        starbtn = <button className=\"fav-btn-yellow\" onClick={handleFavoritingStory}><FaStar className=\"star-icon\" /></button>;\n    }\n    else {\n        starbtn = <button className=\"fav-btn\" onClick={handleFavoritingStory}><FaStar className=\"star-icon\" /></button>;\n    }\n\n    //TODO: do the same as above for watch story\n    if (currentStory.watch_list.find(element => element === \"ollie.project.307@gmail.com\")) {\n        watchbtn = <button className=\"wtch-btn-yellow\" onClick={handleWatchingStory}><FaRegEye className=\"wtch-icon\" /></button>;\n    }\n    else {\n        watchbtn = <button className=\"wtch-btn\" onClick={handleWatchingStory}><FaRegEye className=\"wtch-icon\" /></button>;   \n    }\n\n\n    return (\n        <div className=\"story-item\">\n            <div className=\"story-first-row\">\n                <h6 className=\"story-title\">Title: {props.title}</h6>\n                <div className=\"story-btns\">\n                    {watchbtn}\n                    {starbtn}\n                </div>\n            </div>\n            <h6 className=\"story-time\">Time: {props.time}</h6>\n            <p className=\"story-description\">Description: {props.description}</p>\n            <h6 className=\"story-priority\">Priority: {props.priority}</h6>\n            <h6 className=\"story-category\">Category: {props.category}</h6>\n            <h6 className=\"story-assignee\">Assignee: {props.assignee}</h6>\n            <h6 className=\"story-assigner\">Assigner: {props.assigner}</h6>\n            <h6 className=\"story-date_created\">Date Created: {props.date_created}</h6>\n        </div>\n\n        );\n}\n\nexport default StoryDetailsItem;","import React from \"react\";\nimport StoryDetailsItem from './StoryDetailsItem'\nimport { useLocation } from 'react-router-dom'\nimport './StoryDetails.css'\n\nimport Sidebar from \"../Sidebar/Sidebar\"\n\n\nfunction StoryDetails(props) {\n\n    const location = useLocation();\n    let {category, stories} = location.state;\n\n\n    stories = stories.filter(story => story.category === category);\n\n\n    return (\n        <div id=\"StoryDetails\">\n\n            <div id=\"sidebar\">\n                <Sidebar />\n            </div>\n\n            <div id=\"story-details-content\">\n                {stories.map((story) => (\n                    <StoryDetailsItem\n                        story={story}\n                        title={story.title}\n                        time={story.time}\n                        description={story.description}\n                        priority={story.priority}\n                        category={story.category}\n                        assignee={story.assignee}\n                        assigner={story.assigner}\n                        date_created={story.date_created}\n                        watch_list={story.watch_list}\n                    />\n\n                ))}\n\n            </div>\n\n        </div>);\n}\n\n\n\n\nexport default StoryDetails;","import React, { Component } from \"react\";\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, GithubAuthProvider  } from \"firebase/auth\";\nimport {Link, useHistory } from \"react-router-dom\";\nconst { Octokit } = require(\"@octokit/core\");\n\n\nconst provider = new GithubAuthProvider();\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.github = this.github.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChange2(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, this.state.email, this.state.password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        this.props.history.push(\"/Board\");\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert(errorCode, errorMessage);\n        // ..\n      });\n    event.preventDefault();\n    \n  }\n\n  \n  github(event) {\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n        const credential = GithubAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        this.props.history.push(\"/Board\");\n        \n        // ...\n      }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GithubAuthProvider.credentialFromError(error);\n        console.log(errorCode, errorMessage, credential);\n        // ...\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\" >\n      <form onSubmit={this.handleSubmit}>\n        <h3>Sign In</h3>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Email address</label>\n          <input type=\"email\" value={this.state.email} className=\"form-control\" onChange={this.handleChange} placeholder=\"Enter email\" />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" for=\"password\">Password</label>\n          <input id=\"password\" type=\"password\" value={this.state.password} className=\"form-control\" onChange={this.handleChange2} placeholder=\"Enter password\" />\n        </div>\n\n        <div className=\"form-group\">\n          <div className=\"custom-control custom-checkbox\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n            <label className=\"form-label\" htmlFor=\"customCheck1\">Remember me</label>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n        \n        <p className=\"forgot-password text-right\">\n          Forgot <a href=\"#\">password?</a>\n        </p>\n        <text style={{ marginTop: -50}}> Don't have an account? </text>\n        <Link to=\"/signup\">\n        Sign up\n      </Link>\n      </form>\n      <form onSubmit={this.github}>\n        <h3 style={{ textAlign: 'center', marginBottom:20, marginTop: 30 }}>OR</h3>\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{width: 250}}>Sign-in with GitHub</button>\n      </form>\n      \n      </div>\n      </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from 'firebase/app';\nimport {Link } from \"react-router-dom\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAnXtdpxXg1eYEyGJ3xLKF0C2VnYqTQLNc\",\n  authDomain: \"ollie-70ff1.firebaseapp.com\",\n  projectId: \"ollie-70ff1\",\n  storageBucket: \"ollie-70ff1.appspot.com\",\n  messagingSenderId: \"133461552512\",\n  appId: \"1:133461552512:web:900329aa159323de632565\",\n  measurementId: \"G-1W7ZXJ43V9\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport default class Signup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChange2(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, this.state.email, this.state.password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        alert(\"User successfully created\");\n        this.props.history.push(\"/Board\");\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert(errorCode, errorMessage);\n        // ..\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\" >\n    <form onSubmit={this.handleSubmit}>\n      <h3>Sign Up</h3>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\">Email address</label>\n        <input type=\"email\" value={this.state.email} className=\"form-control\" onChange={this.handleChange} placeholder=\"Enter email\" />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\" for=\"password\">Password</label>\n        <input id=\"password\" type=\"password\" value={this.state.password} className=\"form-control\" onChange={this.handleChange2} placeholder=\"Enter password\" />\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n          <label className=\"form-label\" htmlFor=\"customCheck1\">Remember me</label>\n        </div>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n      \n      <p className=\"forgot-password text-right\">\n        Forgot <a href=\"#\">password?</a>\n      </p>\n        <text style={{ marginTop: -50}}> Already have an account? </text>\n        <Link to=\"/login\">\n        Log in\n      </Link>\n    </form>\n    </div>\n    </div>\n    </div>\n    );\n  }\n}","import { CreateCodeReviewStory } from \"../../CreateStory\";\n\nconst { Octokit } = require(\"@octokit/core\");\nrequire('dotenv').config();\nconst token = process.env.token;\nconst poll = (owner, repo) => {\n  const octokit = new Octokit({ auth: token});\n  octokit.request('GET /repos/{owner}/{repo}/commits', {\n    owner: owner,\n    repo: repo\n  }).then(response => {\n    console.log(localStorage.oldCommit);\n    //Testing scripting\n    if ((localStorage.oldCommit).localeCompare(\"0\") == 0) {\n      localStorage.oldCommit = response.data[0].sha;\n      //Scripting commit\n      //New commit\n    } else {\n      //Get new commit\n      var newCommit = response.data[0].sha;\n      //Check if new commit equals old commit\n      if (newCommit.localeCompare(localStorage.oldCommit) != 0) {\n        //Set old commit to new commit\n        localStorage.oldCommit = newCommit;\n        //Create story for code reviewer\n        CreateCodeReviewStory();\n      }\n    }\n    console.log(response);\n  });\n\n\n  setTimeout(() => poll(owner, repo), 3000);\n}\n\nexport default poll;","import React from 'react';\nimport './Profile.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { useState } from 'react';\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport Sidebar from '../Sidebar/Sidebar'\nimport {Link } from \"react-router-dom\";\nimport poll from './github.js';\n\nlocalStorage.oldCommit = \"0\";\n\nfunction signout() {\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (user !== null) {\n    signOut(auth).then(() => {\n      alert(\"Signed out successfully.\");\n    }).catch((error) => {\n      alert(error);\n    });\n  } else {\n    alert(\"No account is currently signed in.\");\n  }\n}\n\nconst auth = getAuth();\nconst user = auth.currentUser;\nif (user !== null) {\n  // The user object has basic properties such as display name, email, etc.\n  const displayName = user.displayName;\n  const email = user.email;\n  const photoURL = user.photoURL;\n  const emailVerified = user.emailVerified;\n  console.log(user.email);\n\n  // The user's ID, unique to the Firebase project. Do NOT use\n  // this value to authenticate with your backend server, if\n  // you have one. Use User.getToken() instead.\n  const uid = user.uid;\n} else {\n  console.log(\"user is null\");\n}\n\nconst currUser = {\n    name: \"Qusai\",\n    email: \"Ollie\",\n    repoOwner: \"QAGatPurdue\",\n    repoName: \"Qusai@gmail.com\",\n    profileImg: \"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F20%2F2016%2F11%2Frock-insta.jpg\"\n}\n\nconst Profile = () => {\n\n    const initialState = {\n        isEdit: false,\n        name: currUser.name,\n        email: currUser.email,\n        repoOwner: currUser.repoOwner\n    }\n\n    const [state, setState] = useState(initialState)\n\n    const handleEdit = () => {\n        setState({\n            isEdit: true,\n            name: state.name,\n            email: state.email,\n            repoOwner: state.repoOwner\n        })\n    }\n\n    const handleSave = (event) => {\n        currUser.name = state.name;\n        currUser.email = state.email;\n        currUser.repoOwner = state.repoOwner;\n\n        setState({\n            isEdit: false,\n            name: state.name,\n            email: state.email,\n            repoOwner: state.repoOwner\n        })\n        poll(currUser.repoOwner, currUser.email);\n        \n    }\n\n    const handleChangeName = (event) => {\n        setState({\n            isEdit: state.isEdit,\n            name: event.target.value,\n            email: state.email,\n            repoOwner: state.repoOwner\n        })\n    }\n\n    const handleChangeEmail = (event) => {\n        setState({\n            isEdit: state.isEdit,\n            name: state.name,\n            email: event.target.value,\n            repoOwner: state.repoOwner\n        })\n    }\n\n    const handleChangerepoOwner = (event) => {\n        setState({\n            isEdit: state.isEdit,\n            name: state.name,\n            email: state.email,\n            repoOwner: event.target.value\n        })\n    }\n\n    var fullNameComp;\n    var EmailComp;\n    var GitComp;\n    var repoNameComp;\n    var button;\n\n    if (state.isEdit) {\n        fullNameComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChangeName} value={state.name}></input></Col>;\n        EmailComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChangeEmail} value={state.email}></input></Col>;\n        GitComp = <Col md=\"auto\" lg=\"auto\"><input type=\"text\" onChange={handleChangerepoOwner} value={state.repoOwner}></input></Col>;;\n        repoNameComp = <Col md=\"auto\" lg=\"auto\">{currUser.repoName}</Col>;\n        button = <button id=\"edit-btn\" onClick={handleSave}>Save Changes</button>;\n    }\n    else {\n        fullNameComp = <Col md=\"auto\" lg=\"auto\">{currUser.name}</Col>;\n        EmailComp = <Col md=\"auto\" lg=\"auto\">{currUser.email}</Col>;\n        GitComp = <Col md=\"auto\" lg=\"auto\">{currUser.repoOwner}</Col>;\n        repoNameComp = <Col md=\"auto\" lg=\"auto\">{currUser.repoName}</Col>;\n        button = <button id=\"edit-btn\" onClick={handleEdit}>Edit Profile</button>;\n    }\n\n\n\n    return (\n        <div className=\"Profile\">\n            <div className=\"sidebar\">\n                <Sidebar />\n            </div>\n\n            \n\n            <div className=\"page-content\">\n                <div>\n                {/* TODO: Implement changing image */}\n                <img id=\"profile-img\" src={currUser.profileImg} />\n                </div>\n                <div id=\"profile-info\">\n                    <div>\n                        <Container>  \n                            <Row className=\"center\">\n                                <Col>Display Name: </Col>\n                                {fullNameComp}\n                            </Row>\n                        </Container>\n                    </div>\n                    <div>\n                        <Container>  \n                            <Row className=\"center\">\n                                <Col>Repository Name: </Col>\n                                {EmailComp}\n                            </Row>\n                        </Container>\n                    </div>\n                    <div>\n                        <Container>  \n                            <Row className=\"center\">\n                                <Col>Repository Owner: </Col>\n                                {GitComp}\n                            </Row>\n                        </Container>\n                    </div>\n                    <div>\n                        <Container>  \n                            <Row className=\"center\">\n                                <Col>Email: </Col>\n                                {repoNameComp}\n                            </Row>\n                        </Container>\n                    </div>\n                    {button}\n                </div>\n                \n            </div>\n            <div>\n                <Link to=\"/login\">\n                <button onClick={signout}>Sign-out</button> \n                </Link>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Profile\n","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport Header from \"./Header/Header\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nvar val = 0;\n\nfunction DayRangeEntry() {\n    const [state, setState] = useState({\n        dayRange: 0\n    })\n    val = state.dayRange;\n\n    const handleChange = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n  return (\n  <div>\n      <form>\n          <label>\n          Day Range:{\" \"} \n              <input \n                type=\"number\" \n                name=\"dayRange\"\n                value={state.dayRange} \n                onChange={handleChange}\n              />   \n          </label>\n      </form>\n      <Link to=\"/BoardByDate\"><button>\n          Next\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n  </div>\n  );\n}\n\nexport { val };\nexport default DayRangeEntry;","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue, update } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\nimport { val } from \"./DayRangeEntry\";\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//Code to find date and time is from freeCodeCamp tutorial\nconst timeElapsed = Date.now();\nconst today = new Date(timeElapsed);\nvar dateVal = today.toUTCString();\n\nconst db = getDatabase();\nconst dbRef = ref(db, 'stories');\n\nfunction BoardByDate() {\n  //#region Iterate through all of the stories in the database\n  const [storiesAsObj, setStories] = useState([]);\n  useEffect(() => {\n    const db = getDatabase();\n    const dbRef = ref(db, 'stories');\n    var childNames = [];\n    var childDescriptions = [];\n    var childTimes = [];\n    var childCategories = [];\n    var childPriorities = [];\n    var childDates = [];\n    onValue(dbRef, (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        const childName = childSnapshot.val().name;\n        const childDesc = childSnapshot.val().description;\n        const childTime = childSnapshot.val().estimated_time;\n        const childCategory = childSnapshot.val().category;\n        const childPriority = childSnapshot.val().priority;\n        const childDate = childSnapshot.val().date_created;\n        //alert(childDate);\n        childNames.push(childName);\n        childDescriptions.push(childDesc);\n        childTimes.push(childTime);\n        childCategories.push(childCategory);\n        childPriorities.push(childPriority);\n        childDates.push(childDate);\n      });\n      const assigner_ = \"Qusai\";\n      const assignee_ = \"Bob\";\n      var storiesAsObj = [];\n\n      //Store stories as objects\n      for (var i = 0; i < childNames.length; i++) {\n        const createdAsDate = new Date(childDates[i]);\n        //Calculated difference\n        const diff = today.getTime() - createdAsDate.getTime();\n        const diffDays = diff / (1000 * 60 * 60 * 24);\n        if (diffDays <= val) {\n            storiesAsObj.push(new Story(childNames[i], childDescriptions[i], childTimes[i], assigner_, assignee_, childPriorities[i], childCategories[i], childDates[i]));\n        }\n      }\n\n      console.log(storiesAsObj);\n      setStories(storiesAsObj);\n    });\n\n  }, []);\n    \n  //#endregion\n\n  const [modalState, setModalState] = useState({\n      show: false,\n      story: null,\n  });\n\n\n  const handleChange = e => {\n      setModalState({\n          ...modalState,\n          [e.target.name]: e.target.value,\n      })\n  }\n\n    return (\n      <div id=\"Board\">\n        <div id=\"sidebar\">\n          <Sidebar />\n        </div>\n        <div id=\"board-content\">\n          <div className=\"container\">\n              <div className=\"card\">\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"backlog\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Backlog</h5>\n                  </Link>\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"backlog\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"inprogress\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">In Progress</h5>\n                  </Link>\n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"in_progress\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"blocked\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Blocked</h5>\n                  </Link>\n                  \n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"blocked\")} modalFunc={setModalState}/>\n\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"done\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Done</h5>\n                  </Link> \n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"done\")} modalFunc={setModalState}/>\n              </div>\n          </div>\n          <div>\n          <br></br>\n          <br></br>    \n          <Link to=\"/Board\"><button>\n          Back to Board\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/PrioritySelection\"><button>\n          Board By Priority\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/TimeEstimateEntry\"><button>\n          Board By Time Estimate\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        </div>\n        </div>\n          \n\n        <MyVerticallyCenteredModal\n        show={modalState.show}\n        onHide={() => setModalState({show: false, story: modalState.story})}\n        story={modalState.story}\n        />\n\n      </div>\n    );  \n}\n\nfunction MyVerticallyCenteredModal(props) {\n    var title;\n    var description;\n    var time;\n    var priority;\n    var category;\n    var date;\n    if (props.story != null) {\n        title = props.story.title\n        description = props.story.description;\n        time = props.story.time;\n        priority = props.story.priority;\n        category = props.story.category;\n        date = props.story.date_created;\n    }\n    var priorityColor = \"\";\n    if (priority == \"high\") {\n        priorityColor = \"red\";\n    }\n    if (priority == \"medium\") {\n        priorityColor = \"orange\";\n    }\n    if (priority == \"low\") {\n        priorityColor = \"green\";\n    }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Story Details\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Story Name: {title}</h4>\n        <p>\n          Time Estimate: {time} hrs\n        </p>\n        <p>\n          Priority of this story: <font color={priorityColor}>{priority}</font>\n        </p>\n        <p>\n          Date Created: {date}\n        </p>\n        <h4>Brief Story Description: </h4>\n        <p>\n          {description}\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={() => {\n          if (window.confirm(\"Are you sure you want to delete this story?\")) {\n            const updates = {};\n            updates['/stories/' + props.story.title] = null;\n            update(ref(db), updates);\n          }\n        }}>Delete Story</Button>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default BoardByDate;","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport Header from \"./Header/Header\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nvar prioritySelection = \"\";\n\nfunction PrioritySelection() {\n    const [state, setState] = useState({\n        prioritySelection: \"low\"\n    })\n    prioritySelection = state.prioritySelection;\n\n    const handleChange = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n  return (\n  <div>\n      <form>\n            <label>\n                    Priority:\n                    <select\n                        name=\"prioritySelection\"\n                        value={state.prioritySelection} \n                        onChange={handleChange}\n                    >\n                    <option value=\"low\">Low</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"high\">High</option>\n                    </select>\n            </label>\n      </form>\n      <Link to=\"/BoardByPriority\"><button>\n          Next\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n  </div>\n  );\n}\n\nexport { prioritySelection };\nexport default PrioritySelection;","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue, update } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport Header from \"./Header/Header\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\nimport { prioritySelection } from \"./PrioritySelection\";\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst db = getDatabase();\nconst dbRef = ref(db, 'stories');\n\nfunction BoardByPriority() {\n    //#region Iterate through all of the stories in the database\n  \n  const [storiesAsObj, setStories] = useState([]);\n  \n  useEffect(() => {\n    \n    const db = getDatabase();\n    const dbRef = ref(db, 'stories');\n    var childNames = [];\n    var childDescriptions = [];\n    var childTimes = [];\n    var childCategories = [];\n    var childPriorities = [];\n    var childDates = [];\n    onValue(dbRef, (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        const childName = childSnapshot.val().name;\n        const childDesc = childSnapshot.val().description;\n        const childTime = childSnapshot.val().estimated_time;\n        const childCategory = childSnapshot.val().category;\n        const childPriority = childSnapshot.val().priority;\n        const childDate = childSnapshot.val().date_created;\n        //alert(childDate);\n        childNames.push(childName);\n        childDescriptions.push(childDesc);\n        childTimes.push(childTime);\n        childCategories.push(childCategory);\n        childPriorities.push(childPriority);\n        childDates.push(childDate);\n      });\n      const assigner_ = \"Qusai\";\n      const assignee_ = \"Bob\";\n      var storiesAsObj = [];\n\n      //Store stories as objects based on \n      for (var i = 0; i < childNames.length; i++) {\n        if (prioritySelection === childPriorities[i]) {\n            storiesAsObj.push(new Story(childNames[i], childDescriptions[i], childTimes[i], assigner_, assignee_, childPriorities[i], childCategories[i], childDates[i]));\n        }\n      }\n\n      console.log(storiesAsObj);\n\n      setStories(storiesAsObj);\n    });\n\n  }, []);\n    \n    \n\n    \n  \n  //#endregion\n\n    const [modalState, setModalState] = useState({\n        show: false,\n        story: null,\n        //dayRange: 0\n    });\n\n\n  const handleChange = e => {\n      setModalState({\n          ...modalState,\n          [e.target.name]: e.target.value,\n      })\n  }\n\n    return (\n      <div id=\"Board\">\n        <div id=\"sidebar\">\n          <Sidebar />\n        </div>\n        <div id=\"board-content\">\n          <div className=\"container\">\n              <div className=\"card\">\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"backlog\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Backlog</h5>\n                  </Link>\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"backlog\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"inprogress\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">In Progress</h5>\n                  </Link>\n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"in_progress\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"blocked\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Blocked</h5>\n                  </Link>\n                  \n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"blocked\")} modalFunc={setModalState}/>\n\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"done\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Done</h5>\n                  </Link> \n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"done\")} modalFunc={setModalState}/>\n              </div>\n          </div>\n          <div>\n          <br></br>\n          <br></br>    \n          <Link to=\"/Board\"><button>\n          Back to Board\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/DayRangeEntry\"><button>\n          Board By Date\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/TimeEstimateEntry\"><button>\n          Board By Time Estimate\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        </div>\n        </div>\n          \n\n        <MyVerticallyCenteredModal\n        show={modalState.show}\n        onHide={() => setModalState({show: false, story: modalState.story})}\n        story={modalState.story}\n        />\n\n      </div>\n    );  \n}\n\nfunction MyVerticallyCenteredModal(props) {\n    var title;\n    var description;\n    var time;\n    var priority;\n    var category;\n    var date;\n    if (props.story != null) {\n        title = props.story.title\n        description = props.story.description;\n        time = props.story.time;\n        priority = props.story.priority;\n        category = props.story.category;\n        date = props.story.date_created;\n        //alert(props.story.date_created);\n    }\n    var priorityColor = \"\";\n    if (priority == \"high\") {\n        priorityColor = \"red\";\n    }\n    if (priority == \"medium\") {\n        priorityColor = \"orange\";\n    }\n    if (priority == \"low\") {\n        priorityColor = \"green\";\n    }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Story Details\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Story Name: {title}</h4>\n        <p>\n          Time Estimate: {time} hrs\n        </p>\n        <p>\n          Priority of this story: <font color={priorityColor}>{priority}</font>\n        </p>\n        <p>\n          Date Created: {date}\n        </p>\n        <h4>Brief Story Description: </h4>\n        <p>\n          {description}\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={() => {\n          if (window.confirm(\"Are you sure you want to delete this story?\")) {\n            const updates = {};\n            updates['/stories/' + props.story.title] = null;\n            update(ref(db), updates);\n          }\n        }}>Delete Story</Button>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default BoardByPriority;","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport Header from \"./Header/Header\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nvar timeEstimate = 0;\n\nfunction TimeEstimateEntry() {\n    const [state, setState] = useState({\n        timeEstimate: 0\n    })\n    timeEstimate = state.timeEstimate;\n\n    const handleChange = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n  return (\n  <div>\n      <form>\n          <label>\n          Time Estimate:{\" \"} \n              <input \n                type=\"number\" \n                name=\"timeEstimate\"\n                value={state.timeEstimate} \n                onChange={handleChange}\n              />   \n          </label>\n      </form>\n      <Link to=\"/BoardByTimeEstimate\"><button>\n          Next\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n  </div>\n  );\n}\n\nexport { timeEstimate };\nexport default TimeEstimateEntry;","import React, { Component, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDatabase, ref, onValue, update } from \"firebase/database\";\nimport Sidebar from '../Sidebar/Sidebar'\n\n// Custom Components and CSS\nimport Story from \"../../Classes/Story\";\nimport Header from \"./Header/Header\";\nimport BoardBox from \"./BoardBox/BoardBox\";\nimport './Board.css';\nimport './Header/Header.css';\nimport { timeEstimate } from \"./TimeEstimateEntry\";\n\n// Bootstrap Components\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst db = getDatabase();\nconst dbRef = ref(db, 'stories');\n\nfunction BoardByTimeEstimate() {\n    //#region Iterate through all of the stories in the database\n  \n  const [storiesAsObj, setStories] = useState([]);\n  \n  useEffect(() => {\n    \n    const db = getDatabase();\n    const dbRef = ref(db, 'stories');\n    var childNames = [];\n    var childDescriptions = [];\n    var childTimes = [];\n    var childCategories = [];\n    var childPriorities = [];\n    var childDates = [];\n    onValue(dbRef, (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        const childName = childSnapshot.val().name;\n        const childDesc = childSnapshot.val().description;\n        const childTime = childSnapshot.val().estimated_time;\n        const childCategory = childSnapshot.val().category;\n        const childPriority = childSnapshot.val().priority;\n        const childDate = childSnapshot.val().date_created;\n        //alert(childDate);\n        childNames.push(childName);\n        childDescriptions.push(childDesc);\n        childTimes.push(childTime);\n        childCategories.push(childCategory);\n        childPriorities.push(childPriority);\n        childDates.push(childDate);\n      });\n      const assigner_ = \"Qusai\";\n      const assignee_ = \"Bob\";\n      var storiesAsObj = [];\n\n      //Store stories as objects based on \n      for (var i = 0; i < childNames.length; i++) {\n        if (timeEstimate - childTimes[i] >= 0) {\n            storiesAsObj.push(new Story(childNames[i], childDescriptions[i], childTimes[i], assigner_, assignee_, childPriorities[i], childCategories[i], childDates[i]));\n        }\n      }\n\n      console.log(storiesAsObj);\n\n      setStories(storiesAsObj);\n    });\n\n  }, []);\n  \n  //#endregion\n\n    const [modalState, setModalState] = useState({\n        show: false,\n        story: null,\n        //dayRange: 0\n    });\n\n\n  const handleChange = e => {\n      setModalState({\n          ...modalState,\n          [e.target.name]: e.target.value,\n      })\n  }\n\n    return (\n      <div id=\"Board\">\n        <div id=\"sidebar\">\n          <Sidebar />\n        </div>\n        <div id=\"board-content\">\n          <div className=\"container\">\n              <div className=\"card\">\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"backlog\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Backlog</h5>\n                  </Link>\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"backlog\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"inprogress\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">In Progress</h5>\n                  </Link>\n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"in_progress\")} modalFunc={setModalState}/>\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"blocked\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Blocked</h5>\n                  </Link>\n                  \n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"blocked\")} modalFunc={setModalState}/>\n\n              </div>\n              <div className=\"card\">\n\n                  <Link className=\"board-anchors\" to={{\n                      pathname: \"/StoryDetails\",\n                      state: { category: \"done\", stories: storiesAsObj }\n                  }}>\n                      <h5 className=\"board-box-title\">Done</h5>\n                  </Link> \n\n                  <BoardBox categStories={storiesAsObj.filter(story => story.category === \"done\")} modalFunc={setModalState}/>\n              </div>\n          </div>\n          <div>\n          <br></br>\n          <br></br>    \n          <Link to=\"/Board\"><button>\n          Back to Board\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/DayRangeEntry\"><button>\n          Board By Date\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        <Link to=\"/PrioritySelection\"><button>\n          Board By Priority\n        </button>\n          <br></br>\n          <br></br>\n        </Link>\n        </div>\n        </div>\n          \n\n        <MyVerticallyCenteredModal\n        show={modalState.show}\n        onHide={() => setModalState({show: false, story: modalState.story})}\n        story={modalState.story}\n        />\n\n      </div>\n    );  \n}\n\nfunction MyVerticallyCenteredModal(props) {\n    var title;\n    var description;\n    var time;\n    var priority;\n    var category;\n    var date;\n    if (props.story != null) {\n        title = props.story.title\n        description = props.story.description;\n        time = props.story.time;\n        priority = props.story.priority;\n        category = props.story.category;\n        date = props.story.date_created;\n    }\n    var priorityColor = \"\";\n    if (priority == \"high\") {\n        priorityColor = \"red\";\n    }\n    if (priority == \"medium\") {\n        priorityColor = \"orange\";\n    }\n    if (priority == \"low\") {\n        priorityColor = \"green\";\n    }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n       <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Story Details\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Story Name: {title}</h4>\n        <p>\n          Time Estimate: {time} hrs\n        </p>\n        <p>\n          Priority of this story: <font color={priorityColor}>{priority}</font>\n        </p>\n        <p>\n          Date Created: {date}\n        </p>\n        <h4>Brief Story Description: </h4>\n        <p>\n          {description}\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={() => {\n          if (window.confirm(\"Are you sure you want to delete this story?\")) {\n            const updates = {};\n            updates['/stories/' + props.story.title] = null;\n            update(ref(db), updates);\n          }\n        }}>Delete Story</Button>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default BoardByTimeEstimate;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport CreateStory from './CreateStory';\nimport Board from './Components/Board/Board';\nimport Settings from './Components/Settings/Settings'\nimport StoryDetails from './Components/StoryDetails/StoryDetails';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './login.component';\nimport Signup from './signup.component';\nimport Profile from \"./Components/Profile/Profile\"\nimport BoardByDate from \"./Components/Board/BoardByDate\";\nimport BoardByPriority from \"./Components/Board/BoardByPriority\";\nimport BoardByTimeEstimate from \"./Components/Board/BoardByTimeEstimate\";\nimport DayRangeEntry from \"./Components/Board/DayRangeEntry\";\nimport PrioritySelection from \"./Components/Board/PrioritySelection\";\nimport TimeEstimateEntry from \"./Components/Board/TimeEstimateEntry\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\"\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n   <Switch>\n     <Route exact path=\"/\" component={App} />\n     <Route path=\"/CreateStory\" component={CreateStory} />\n     <Route path=\"/Board\" component={Board} />\n     <Route path=\"/Settings\" component={Settings} />\n     <Route path=\"/StoryDetails\" component={StoryDetails} />\n     <Route path=\"/login\" component={Login} />\n     <Route path=\"/signup\" component={Signup} />\n     <Route path=\"/Profile\" component={Profile} />\n     <Route path=\"/DayRangeEntry\" component={DayRangeEntry} />\n     <Route path=\"/PrioritySelection\" component={PrioritySelection} />\n     <Route path=\"/TimeEstimateEntry\" component={TimeEstimateEntry} />\n     <Route path=\"/BoardByDate\" component={BoardByDate} />\n     <Route path=\"/BoardByPriority\" component={BoardByPriority} />\n     <Route path=\"/BoardByTimeEstimate\" component={BoardByTimeEstimate} />\n     <Route path=\"/Sidebar\" component={Sidebar} />\n   </Switch>\n  </HashRouter>,\n  rootElement\n);\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}